
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4D14B3FC174819C00B404A22468B62F2'
    
_lr_action_items = {'BREAK':([11,15,16,22,24,26,29,30,31,37,38,],[-5,-8,-9,-3,-4,-10,-14,-12,35,-13,-11,]),'dqutation':([9,13,15,16,21,26,33,34,],[13,13,-8,-9,26,-10,13,13,]),'PRINT':([22,23,],[27,27,]),'lparen':([1,27,],[5,33,]),'colon':([14,15,16,17,26,],[22,-8,-9,23,-10,]),'name':([5,9,13,22,23,33,34,],[6,15,15,28,28,15,15,]),'FINALLY':([10,20,25,],[17,-6,-7,]),'equal':([28,],[34,]),'number':([9,13,33,34,],[16,16,16,16,]),'erparen':([8,10,11,15,16,18,19,20,23,24,25,26,29,30,32,37,38,],[11,-3,-5,-8,-9,-17,24,-6,-3,-4,-7,-10,-14,-12,-16,-13,-11,]),'blparen':([7,],[8,]),'SWITCH':([0,22,23,],[1,1,1,]),'rparen':([6,15,16,26,36,],[7,-8,-9,-10,38,]),'$end':([0,2,3,4,11,24,],[-3,-2,0,-1,-5,-4,]),'CASE':([8,20,],[9,9,]),'simicolon':([12,35,],[20,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'none':([0,10,22,23,],[2,18,30,30,]),'CASELIST':([8,20,],[10,25,]),'switch_begin':([0,],[3,]),'inter_finally':([10,],[19,]),'term':([9,13,33,34,],[14,21,36,37,]),'switch_s':([0,22,23,],[4,29,29,]),'inter_case':([8,20,],[12,12,]),'exp':([22,23,],[31,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> switch_begin","S'",1,None,None,None),
  ('switch_begin -> switch_s','switch_begin',1,'p_switch_begin','mypro.py',60),
  ('switch_begin -> none','switch_begin',1,'p_switch_begin','mypro.py',61),
  ('none -> <empty>','none',0,'p_none','mypro.py',66),
  ('switch_s -> SWITCH lparen name rparen blparen CASELIST inter_finally erparen','switch_s',8,'p_switch_s','mypro.py',71),
  ('switch_s -> SWITCH lparen name rparen blparen erparen','switch_s',6,'p_switch_s','mypro.py',72),
  ('CASELIST -> inter_case simicolon','CASELIST',2,'p_CASELIST','mypro.py',76),
  ('CASELIST -> inter_case simicolon CASELIST','CASELIST',3,'p_CASELIST','mypro.py',77),
  ('term -> name','term',1,'p_term','mypro.py',82),
  ('term -> number','term',1,'p_term','mypro.py',83),
  ('term -> dqutation term dqutation','term',3,'p_term','mypro.py',84),
  ('exp -> PRINT lparen term rparen','exp',4,'p_exp','mypro.py',88),
  ('exp -> none','exp',1,'p_exp','mypro.py',89),
  ('exp -> name equal term','exp',3,'p_exp','mypro.py',90),
  ('exp -> switch_s','exp',1,'p_exp','mypro.py',91),
  ('inter_case -> CASE term colon exp BREAK','inter_case',5,'p_inter_case','mypro.py',96),
  ('inter_finally -> FINALLY colon exp','inter_finally',3,'p_inter_finally','mypro.py',101),
  ('inter_finally -> none','inter_finally',1,'p_inter_finally','mypro.py',102),
]
